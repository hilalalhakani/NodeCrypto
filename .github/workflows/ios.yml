name: iOS Build and Test
on:
  push:
    branches: [] #[ main, develop ]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    name: Build and Test
    runs-on: macos-latest

    steps:
      # 1. Checkout repository with fetch-depth (reduced from 0 to 1 for faster checkout)
      - name: Checkout repository
        uses: actions/checkout@v4.1.1
        
      - name: List available simulators
        run: xcrun simctl list devices

      # 2. Setup Xcode (kept, but consider pinning a version for stability)
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest

      - name: Enable macros
        run: defaults write com.apple.dt.Xcode IDESkipMacroFingerprintValidation -bool YES

      # 3. Cache Dependencies (improved caching strategy)
      - name: Restore package cache
        uses: actions/cache@v4
        id: packages-cache
        with:
          path: packages_cache
          key: ${{ runner.os }}-packages-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-packages-
          save-always: true

      # 4. Install SwiftLint (consider moving to a dependency manager like Carthage or SPM for SwiftLint)
      - name: Install SwiftLint
        run: brew install swiftlint

      - name: Run tests
        run: ./build_scripts/test.sh
        env:
          HAS_PACKAGES_CACHE_HIT: ${{ steps.packages-cache.outputs.cache-hit == 'true' }}

      # Save package cache after tests
      - name: Save package cache
        uses: actions/cache@v4
        with:
          path: packages_cache
          key: ${{ runner.os }}-packages-${{ hashFiles('**/Package.resolved') }}
          save-always: true
